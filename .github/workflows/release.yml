# .github/workflows/release.yml
name: 'Release Tauri App'

# When to run this workflow
on:
  push:
    tags:
      - 'v*' # Triggers when you push tags like v1.0.0, v2.1.3, etc.

# Jobs that run in parallel
jobs:
  publish-tauri:
    permissions:
      contents: write # Needed to create releases and upload assets
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin' # Apple Silicon
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'  # Intel Mac
          - platform: 'ubuntu-22.04'
            args: '' # Linux
          - platform: 'windows-latest'
            args: '' # Windows

    runs-on: ${{ matrix.platform }}

    steps:
      # Download your code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install Node.js (adjust version as needed)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm' # Change to 'yarn' or 'pnpm' if you use those

      # Install Rust
      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      # Install Linux dependencies (only needed for Linux)
      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      # Install your app's dependencies
      - name: Install frontend dependencies
        run: npm install # Change to 'yarn install' or 'pnpm install' if needed

      # Build and release
      - name: Build sa-pc-exam For Internal (Purple Background)
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Add these if you want signed updates
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

          VITE_BASE_API: ${{ secrets.VITE_BASE_API }}
          VITE_ENV: 'insite'
          VITE_EVAL_URL: ${{ secrets.VITE_EVAL_URL }}
          VITE_EVL: ${{ secrets.VITE_EVL }}
          VITE_POR: ${{ secrets.VITE_POR }}
          VITE_POR_TOKEN: ${{ secrets.VITE_POR_TOKEN }}
          VITE_WS: ${{ secrets.VITE_WS }}
          VITE_WS_PING: ${{ secrets.VITE_WS_PING }}
        with:
          # Release settings
          tagName: '${{ github.ref_name }}-internal'
          releaseName: 'sa-pc-exam-internal ${{ github.ref_name }}'
          releaseBody: 'https://layanan.ppsdmmigas.id/appujian/releasenote/v${{ github.ref_name }}'
          releaseDraft: false
          prerelease: false

          # Build settings
          includeUpdaterJson: true # Generate JSON for auto-updates
          updaterJsonPreferNsis: true # Use .exe for Windows updates
          args: ${{ matrix.args }}

      - name: Build sa-pc-exam For External (Blue Background)
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # Add these if you want signed updates
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}

          VITE_BASE_API: ${{ secrets.VITE_BASE_API }}
          VITE_ENV: 'external'
          VITE_EVAL_URL: ${{ secrets.VITE_EVAL_URL }}
          VITE_EVL: ${{ secrets.VITE_EVL }}
          VITE_POR: ${{ secrets.VITE_POR }}
          VITE_POR_TOKEN: ${{ secrets.VITE_POR_TOKEN }}
          VITE_WS: ${{ secrets.VITE_WS }}
          VITE_WS_PING: ${{ secrets.VITE_WS_PING }}
        with:
          # Release settings
          tagName: '${{ github.ref_name }}'
          releaseName: 'sa-pc-exam ${{ github.ref_name }}'
          releaseBody: 'https://layanan.ppsdmmigas.id/appujian/releasenote/v${{ github.ref_name }}'
          releaseDraft: false
          prerelease: false

          # Build settings
          includeUpdaterJson: true # Generate JSON for auto-updates
          updaterJsonPreferNsis: true # Use .exe for Windows updates
          args: ${{ matrix.args }}
